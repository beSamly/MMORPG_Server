// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: STAT_INFO.proto

#include "STAT_INFO.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR STAT_INFO::STAT_INFO(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.maxhp_)*/0
  , /*decltype(_impl_.maxmp_)*/0
  , /*decltype(_impl_.attackpower_)*/0
  , /*decltype(_impl_.magicpower_)*/0
  , /*decltype(_impl_.movespeed_)*/0
  , /*decltype(_impl_.attackspeed_)*/0
  , /*decltype(_impl_.armor_)*/0
  , /*decltype(_impl_.magicresistance_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STAT_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR STAT_INFODefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STAT_INFODefaultTypeInternal() {}
  union {
    STAT_INFO _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STAT_INFODefaultTypeInternal _STAT_INFO_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_STAT_5fINFO_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_STAT_5fINFO_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_STAT_5fINFO_2eproto = nullptr;

const uint32_t TableStruct_STAT_5fINFO_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.maxhp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.maxmp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.attackpower_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.magicpower_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.movespeed_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.attackspeed_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.armor_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STAT_INFO, _impl_.magicresistance_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::STAT_INFO)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_STAT_INFO_default_instance_._instance,
};

const char descriptor_table_protodef_STAT_5fINFO_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017STAT_INFO.proto\022\010Protocol\"\242\001\n\tSTAT_INF"
  "O\022\r\n\005maxHp\030\001 \001(\005\022\r\n\005maxMp\030\002 \001(\005\022\023\n\013attac"
  "kPower\030\003 \001(\005\022\022\n\nmagicPower\030\004 \001(\005\022\021\n\tmove"
  "Speed\030\005 \001(\005\022\023\n\013attackSpeed\030\006 \001(\005\022\r\n\005armo"
  "r\030\007 \001(\005\022\027\n\017magicResistance\030\010 \001(\005b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_STAT_5fINFO_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_STAT_5fINFO_2eproto = {
    false, false, 200, descriptor_table_protodef_STAT_5fINFO_2eproto,
    "STAT_INFO.proto",
    &descriptor_table_STAT_5fINFO_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_STAT_5fINFO_2eproto::offsets,
    file_level_metadata_STAT_5fINFO_2eproto, file_level_enum_descriptors_STAT_5fINFO_2eproto,
    file_level_service_descriptors_STAT_5fINFO_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_STAT_5fINFO_2eproto_getter() {
  return &descriptor_table_STAT_5fINFO_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_STAT_5fINFO_2eproto(&descriptor_table_STAT_5fINFO_2eproto);
namespace Protocol {

// ===================================================================

class STAT_INFO::_Internal {
 public:
};

STAT_INFO::STAT_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STAT_INFO)
}
STAT_INFO::STAT_INFO(const STAT_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STAT_INFO* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.maxhp_){}
    , decltype(_impl_.maxmp_){}
    , decltype(_impl_.attackpower_){}
    , decltype(_impl_.magicpower_){}
    , decltype(_impl_.movespeed_){}
    , decltype(_impl_.attackspeed_){}
    , decltype(_impl_.armor_){}
    , decltype(_impl_.magicresistance_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.maxhp_, &from._impl_.maxhp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.magicresistance_) -
    reinterpret_cast<char*>(&_impl_.maxhp_)) + sizeof(_impl_.magicresistance_));
  // @@protoc_insertion_point(copy_constructor:Protocol.STAT_INFO)
}

inline void STAT_INFO::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.maxhp_){0}
    , decltype(_impl_.maxmp_){0}
    , decltype(_impl_.attackpower_){0}
    , decltype(_impl_.magicpower_){0}
    , decltype(_impl_.movespeed_){0}
    , decltype(_impl_.attackspeed_){0}
    , decltype(_impl_.armor_){0}
    , decltype(_impl_.magicresistance_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STAT_INFO::~STAT_INFO() {
  // @@protoc_insertion_point(destructor:Protocol.STAT_INFO)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STAT_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void STAT_INFO::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STAT_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STAT_INFO)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.maxhp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.magicresistance_) -
      reinterpret_cast<char*>(&_impl_.maxhp_)) + sizeof(_impl_.magicresistance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STAT_INFO::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 maxHp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.maxhp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxMp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.maxmp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 attackPower = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.attackpower_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 magicPower = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.magicpower_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 moveSpeed = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.movespeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 attackSpeed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.attackspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 armor = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.armor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 magicResistance = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.magicresistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STAT_INFO::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STAT_INFO)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 maxHp = 1;
  if (this->_internal_maxhp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_maxhp(), target);
  }

  // int32 maxMp = 2;
  if (this->_internal_maxmp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_maxmp(), target);
  }

  // int32 attackPower = 3;
  if (this->_internal_attackpower() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_attackpower(), target);
  }

  // int32 magicPower = 4;
  if (this->_internal_magicpower() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_magicpower(), target);
  }

  // int32 moveSpeed = 5;
  if (this->_internal_movespeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_movespeed(), target);
  }

  // int32 attackSpeed = 6;
  if (this->_internal_attackspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_attackspeed(), target);
  }

  // int32 armor = 7;
  if (this->_internal_armor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_armor(), target);
  }

  // int32 magicResistance = 8;
  if (this->_internal_magicresistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_magicresistance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STAT_INFO)
  return target;
}

size_t STAT_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STAT_INFO)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 maxHp = 1;
  if (this->_internal_maxhp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxhp());
  }

  // int32 maxMp = 2;
  if (this->_internal_maxmp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxmp());
  }

  // int32 attackPower = 3;
  if (this->_internal_attackpower() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_attackpower());
  }

  // int32 magicPower = 4;
  if (this->_internal_magicpower() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_magicpower());
  }

  // int32 moveSpeed = 5;
  if (this->_internal_movespeed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_movespeed());
  }

  // int32 attackSpeed = 6;
  if (this->_internal_attackspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_attackspeed());
  }

  // int32 armor = 7;
  if (this->_internal_armor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_armor());
  }

  // int32 magicResistance = 8;
  if (this->_internal_magicresistance() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_magicresistance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STAT_INFO::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STAT_INFO::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STAT_INFO::GetClassData() const { return &_class_data_; }


void STAT_INFO::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STAT_INFO*>(&to_msg);
  auto& from = static_cast<const STAT_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STAT_INFO)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_maxhp() != 0) {
    _this->_internal_set_maxhp(from._internal_maxhp());
  }
  if (from._internal_maxmp() != 0) {
    _this->_internal_set_maxmp(from._internal_maxmp());
  }
  if (from._internal_attackpower() != 0) {
    _this->_internal_set_attackpower(from._internal_attackpower());
  }
  if (from._internal_magicpower() != 0) {
    _this->_internal_set_magicpower(from._internal_magicpower());
  }
  if (from._internal_movespeed() != 0) {
    _this->_internal_set_movespeed(from._internal_movespeed());
  }
  if (from._internal_attackspeed() != 0) {
    _this->_internal_set_attackspeed(from._internal_attackspeed());
  }
  if (from._internal_armor() != 0) {
    _this->_internal_set_armor(from._internal_armor());
  }
  if (from._internal_magicresistance() != 0) {
    _this->_internal_set_magicresistance(from._internal_magicresistance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STAT_INFO::CopyFrom(const STAT_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STAT_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STAT_INFO::IsInitialized() const {
  return true;
}

void STAT_INFO::InternalSwap(STAT_INFO* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STAT_INFO, _impl_.magicresistance_)
      + sizeof(STAT_INFO::_impl_.magicresistance_)
      - PROTOBUF_FIELD_OFFSET(STAT_INFO, _impl_.maxhp_)>(
          reinterpret_cast<char*>(&_impl_.maxhp_),
          reinterpret_cast<char*>(&other->_impl_.maxhp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata STAT_INFO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_STAT_5fINFO_2eproto_getter, &descriptor_table_STAT_5fINFO_2eproto_once,
      file_level_metadata_STAT_5fINFO_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::STAT_INFO*
Arena::CreateMaybeMessage< ::Protocol::STAT_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STAT_INFO >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
