// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: STAT_INFO.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from STAT_INFO.proto</summary>
  public static partial class STATINFOReflection {

    #region Descriptor
    /// <summary>File descriptor for STAT_INFO.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static STATINFOReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9TVEFUX0lORk8ucHJvdG8SCFByb3RvY29sIqIBCglTVEFUX0lORk8SDQoF",
            "bWF4SHAYASABKAUSDQoFbWF4TXAYAiABKAUSEwoLYXR0YWNrUG93ZXIYAyAB",
            "KAUSEgoKbWFnaWNQb3dlchgEIAEoBRIRCgltb3ZlU3BlZWQYBSABKAUSEwoL",
            "YXR0YWNrU3BlZWQYBiABKAUSDQoFYXJtb3IYByABKAUSFwoPbWFnaWNSZXNp",
            "c3RhbmNlGAggASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.STAT_INFO), global::Protocol.STAT_INFO.Parser, new[]{ "MaxHp", "MaxMp", "AttackPower", "MagicPower", "MoveSpeed", "AttackSpeed", "Armor", "MagicResistance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class STAT_INFO : pb::IMessage<STAT_INFO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<STAT_INFO> _parser = new pb::MessageParser<STAT_INFO>(() => new STAT_INFO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<STAT_INFO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.STATINFOReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public STAT_INFO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public STAT_INFO(STAT_INFO other) : this() {
      maxHp_ = other.maxHp_;
      maxMp_ = other.maxMp_;
      attackPower_ = other.attackPower_;
      magicPower_ = other.magicPower_;
      moveSpeed_ = other.moveSpeed_;
      attackSpeed_ = other.attackSpeed_;
      armor_ = other.armor_;
      magicResistance_ = other.magicResistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public STAT_INFO Clone() {
      return new STAT_INFO(this);
    }

    /// <summary>Field number for the "maxHp" field.</summary>
    public const int MaxHpFieldNumber = 1;
    private int maxHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "maxMp" field.</summary>
    public const int MaxMpFieldNumber = 2;
    private int maxMp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMp {
      get { return maxMp_; }
      set {
        maxMp_ = value;
      }
    }

    /// <summary>Field number for the "attackPower" field.</summary>
    public const int AttackPowerFieldNumber = 3;
    private int attackPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackPower {
      get { return attackPower_; }
      set {
        attackPower_ = value;
      }
    }

    /// <summary>Field number for the "magicPower" field.</summary>
    public const int MagicPowerFieldNumber = 4;
    private int magicPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MagicPower {
      get { return magicPower_; }
      set {
        magicPower_ = value;
      }
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 5;
    private int moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "attackSpeed" field.</summary>
    public const int AttackSpeedFieldNumber = 6;
    private int attackSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackSpeed {
      get { return attackSpeed_; }
      set {
        attackSpeed_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 7;
    private int armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "magicResistance" field.</summary>
    public const int MagicResistanceFieldNumber = 8;
    private int magicResistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MagicResistance {
      get { return magicResistance_; }
      set {
        magicResistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as STAT_INFO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(STAT_INFO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxHp != other.MaxHp) return false;
      if (MaxMp != other.MaxMp) return false;
      if (AttackPower != other.AttackPower) return false;
      if (MagicPower != other.MagicPower) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      if (AttackSpeed != other.AttackSpeed) return false;
      if (Armor != other.Armor) return false;
      if (MagicResistance != other.MagicResistance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxHp != 0) hash ^= MaxHp.GetHashCode();
      if (MaxMp != 0) hash ^= MaxMp.GetHashCode();
      if (AttackPower != 0) hash ^= AttackPower.GetHashCode();
      if (MagicPower != 0) hash ^= MagicPower.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (AttackSpeed != 0) hash ^= AttackSpeed.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (MagicResistance != 0) hash ^= MagicResistance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxHp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxHp);
      }
      if (MaxMp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxMp);
      }
      if (AttackPower != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackPower);
      }
      if (MagicPower != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MagicPower);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MoveSpeed);
      }
      if (AttackSpeed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackSpeed);
      }
      if (Armor != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Armor);
      }
      if (MagicResistance != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MagicResistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxHp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxHp);
      }
      if (MaxMp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxMp);
      }
      if (AttackPower != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackPower);
      }
      if (MagicPower != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MagicPower);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MoveSpeed);
      }
      if (AttackSpeed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackSpeed);
      }
      if (Armor != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Armor);
      }
      if (MagicResistance != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MagicResistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MaxHp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHp);
      }
      if (MaxMp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMp);
      }
      if (AttackPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackPower);
      }
      if (MagicPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicPower);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeed);
      }
      if (AttackSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackSpeed);
      }
      if (Armor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Armor);
      }
      if (MagicResistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicResistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(STAT_INFO other) {
      if (other == null) {
        return;
      }
      if (other.MaxHp != 0) {
        MaxHp = other.MaxHp;
      }
      if (other.MaxMp != 0) {
        MaxMp = other.MaxMp;
      }
      if (other.AttackPower != 0) {
        AttackPower = other.AttackPower;
      }
      if (other.MagicPower != 0) {
        MagicPower = other.MagicPower;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.AttackSpeed != 0) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.MagicResistance != 0) {
        MagicResistance = other.MagicResistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxHp = input.ReadInt32();
            break;
          }
          case 16: {
            MaxMp = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPower = input.ReadInt32();
            break;
          }
          case 32: {
            MagicPower = input.ReadInt32();
            break;
          }
          case 40: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 48: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 56: {
            Armor = input.ReadInt32();
            break;
          }
          case 64: {
            MagicResistance = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxHp = input.ReadInt32();
            break;
          }
          case 16: {
            MaxMp = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPower = input.ReadInt32();
            break;
          }
          case 32: {
            MagicPower = input.ReadInt32();
            break;
          }
          case 40: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 48: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 56: {
            Armor = input.ReadInt32();
            break;
          }
          case 64: {
            MagicResistance = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
